# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run tests

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
#  pull_request:
#    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: "3.10"
        environment-file: environment.yml
        activate-environment: SonicBatt_env

    - name: Install additional dependencies
      shell: bash -l {0}
      run: |
        pip install flake8 pytest pytest-cov
        pip install -e .

    - name: Test with pytest and generate coverage report
      shell: bash -l {0}
      run: |
        pytest --cov-report xml --cov=SonicBatt

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml


















    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v5
    #   with:
    #     python-version: "3.10"
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest pytest-cov
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    #     pip install -e .
    # # - name: Lint with flake8
    # #   run: |
    # #     # stop the build if there are Python syntax errors or undefined names
    # #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    # #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    # #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest and geneate coverage report
    #   run: |
    #     pytest --cov-report xml --cov=SonicBatt
    #   #   cp coverage.xml $GITHUB_WORKSPACE/coverage.xml
    #   # env:
    #   #   GITHUB_WORKSPACE: ${{ github.workspace }}
    # #--doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    
    # - name: Print Current Directory
    #   run: |
    #     pwd

    # - name: Print coverage report
    #   run: cat coverage.xml

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   env:
    #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    #   with:
    #     file: ./coverage.xml

    #     # with:
    #   #   token: ${{ secrets.CODECOV_TOKEN }}
    #     # directory: ./coverage/reports/
    #     # env_vars: OS,PYTHON
    #     # fail_ci_if_error: true
    #     # files: ./coverage.xml
    #     # flags: unittests
    #   #   name: codecov-umbrella
    #   #   # path_to_write_report: codecov_report.txt
    #   #   verbose: true
      
    #   # with:
    #   #   directory: ./coverage/reports/
    #   #   env_vars: OS,PYTHON
    #   #   fail_ci_if_error: true
    #   #   files: ./coverage1.xml #, !./cache
    #   #   flags: unittests
    #   #   name: codecov-umbrella
    #   #   token: ${{ secrets.CODECOV_TOKEN }}
    #   #   verbose: true
